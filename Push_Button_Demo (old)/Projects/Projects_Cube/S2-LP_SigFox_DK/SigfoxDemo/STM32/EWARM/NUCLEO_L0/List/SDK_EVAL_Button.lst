###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.9.278/W32 for ARM         12/Jan/2021  13:02:21
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                    
#    Endian                   =  little
#    Source file              =
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Drivers\BSP\SDK_Eval_STM32\src\SDK_EVAL_Button.c
#    Command line             =
#        -f C:\Users\dvone\AppData\Local\Temp\EW44F5.tmp
#        (C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Drivers\BSP\SDK_Eval_STM32\src\SDK_EVAL_Button.c
#        -D USE_STM32L0XX_NUCLEO -D USE_HAL_DRIVER -D USE_SYSTICK_DELAY -D
#        STM32L053xx -lC
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\NUCLEO_L0\List
#        -o
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\NUCLEO_L0\Obj
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\Sigfox_Libs\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\ST_API\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\BSP\SDK_Eval_STM32\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\MCU\STM32_HAL\STM32L0xx_HAL_Driver\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\MCU\CMSIS\STM32L0xx\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\S2LP_Middleware\STM32\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\Utils\STM32\inc\\
#        -Ohz --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.4\arm\CMSIS\Core\Include\\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.4\arm\CMSIS\DSP\Include\\")
#    Locale                   =  C
#    List file                =
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\NUCLEO_L0\List\SDK_EVAL_Button.lst
#    Object file              =
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\NUCLEO_L0\Obj\SDK_EVAL_Button.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#
###############################################################################

C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Drivers\BSP\SDK_Eval_STM32\src\SDK_EVAL_Button.c
      1          /**
      2          * @file    SDK_EVAL_Button.c
      3          * @author  AMS VMA RF application team
      4          * @version V2.0.0
      5          * @date    December, 2018
      6          * @brief   This file provides all the low level API to manage buttons for eval board.
      7          * @details
      8          *
      9          * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     10          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     11          * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     12          * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     13          * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     14          * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     15          *
     16          * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
     17          * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
     18          * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     19          *
     20          * <h2><center>&copy; COPYRIGHT 2019 STMicroelectronics</center></h2>
     21          */
     22          
     23          /* Define to prevent recursive inclusion -------------------------------------*/
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "SDK_EVAL_Button.h"
     26          
     27          /** @addtogroup SDK_EVAL_STM32         SDK EVAL STM
     28          * @{
     29          */
     30          
     31          /** @addtogroup SDK_EVAL_Button           SDK EVAL Button
     32          * @{
     33          */
     34          
     35          /** @defgroup SDK_EVAL_Button_Private_TypesDefinitions          SDK EVAL Button Private Types Definitions
     36          * @{
     37          */
     38          
     39          /**
     40          * @}
     41          */
     42          
     43          /** @defgroup SDK_EVAL_Button_Private_Defines                   SDK EVAL Button Private Defines
     44          * @{
     45          */
     46          
     47          /**
     48          * @}
     49          */
     50          
     51          /** @defgroup SDK_EVAL_Button_Private_Macros                    SDK EVAL Button Private Macros
     52          * @{
     53          */
     54          
     55          /**
     56          * @}
     57          */
     58          
     59          /** @defgroup SDK_EVAL_Button_Private_FunctionPrototypes                        SDK EVAL Button Private Function Prototypes
     60          * @{
     61          */
     62          
     63          /**
     64          * @}
     65          */
     66          
     67          /** @defgroup SDK_EVAL_Button_Private_Functions                                 SDK EVAL Button Private Functions
     68          * @{
     69          */
     70          
     71          /* Buttons IRQ Pin */

   \                                 In section .text, align 2, keep-with-next
     72          uint32_t Get_ButtonGpioPin(SdkEvalButton xButton)
     73          {
     74            uint32_t button_pin;
     75            switch (xButton)
     76            {
     77              case(BUTTON_1):
     78          	button_pin = PUSH_BUTTON1_PIN;
     79          	break;
     80            default:
     81              button_pin = PUSH_BUTTON1_PIN;
     82              break;
     83            }
     84            return (button_pin);
   \                     Get_ButtonGpioPin: (+1)
   \        0x0   0x2080             MOVS     R0,#+128
   \        0x2   0x0180             LSLS     R0,R0,#+6        ;; #+8192
   \        0x4   0x4770             BX       LR               ;; return
     85          }
     86          
     87          /**
     88          * @}
     89          */
     90          
     91          /** @defgroup SDK_EVAL_Button_Public_Functions                                 SDK EVAL Button Public Functions
     92          * @{
     93          */
     94          

   \                                 In section .text, align 2, keep-with-next
     95          void SdkEvalPushButtonInit(SdkEvalButton xButton)
     96          {
   \                     SdkEvalPushButtonInit: (+1)
   \        0x0   0xB500             PUSH     {LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
     97            PUSH_BUTTON1_GPIO_CLK();
   \        0x4   0x2004             MOVS     R0,#+4
   \        0x6   0x....             LDR      R1,??DataTable5  ;; 0x4002102c
   \        0x8   0x680A             LDR      R2,[R1, #+0]
   \        0xA   0x4302             ORRS     R2,R2,R0
   \        0xC   0x600A             STR      R2,[R1, #+0]
   \        0xE   0x6809             LDR      R1,[R1, #+0]
   \       0x10   0x4008             ANDS     R0,R0,R1
   \       0x12   0x9000             STR      R0,[SP, #+0]
   \       0x14   0x9800             LDR      R0,[SP, #+0]
     98            GPIO_InitTypeDef GPIO_InitStructure;
     99          
    100            /* Configures Button pin as input */
    101            GPIO_InitStructure.Mode = GPIO_MODE_INPUT;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x9001             STR      R0,[SP, #+4]
    102            GPIO_InitStructure.Pull = GPIO_NOPULL;
   \       0x1A   0x9002             STR      R0,[SP, #+8]
    103            GPIO_InitStructure.Pin = PUSH_BUTTON1_PIN;
   \       0x1C   0x2080             MOVS     R0,#+128
   \       0x1E   0x0180             LSLS     R0,R0,#+6        ;; #+8192
   \       0x20   0x9000             STR      R0,[SP, #+0]
    104            HAL_GPIO_Init(PUSH_BUTTON1_GPIO_PORT, &GPIO_InitStructure);
   \       0x22   0x4669             MOV      R1,SP
   \       0x24   0x....             LDR      R0,??DataTable5_1  ;; 0x50000800
   \       0x26   0x....'....        BL       HAL_GPIO_Init
    105          }
   \       0x2A   0xB005             ADD      SP,SP,#+20
   \       0x2C   0xBD00             POP      {PC}             ;; return
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void SdkEvalPushButtonIrq(SdkEvalButton xButton, SdkEvalButtonIrq xButtonIrq)
    108          {
   \                     SdkEvalPushButtonIrq: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB08A             SUB      SP,SP,#+40
   \        0x4   0x000E             MOVS     R6,R1
    109            PUSH_BUTTON1_GPIO_CLK();
   \        0x6   0x2004             MOVS     R0,#+4
   \        0x8   0x....             LDR      R1,??DataTable5  ;; 0x4002102c
   \        0xA   0x680A             LDR      R2,[R1, #+0]
   \        0xC   0x4302             ORRS     R2,R2,R0
   \        0xE   0x600A             STR      R2,[R1, #+0]
   \       0x10   0x6809             LDR      R1,[R1, #+0]
   \       0x12   0x4008             ANDS     R0,R0,R1
   \       0x14   0x9000             STR      R0,[SP, #+0]
   \       0x16   0x9800             LDR      R0,[SP, #+0]
    110          
    111            GPIO_InitTypeDef GPIO_InitStructure;
    112            GPIO_InitTypeDef EXTI_InitStructure;
    113          
    114            /* Configures Button EXTI line */
    115            GPIO_InitStructure.Mode = GPIO_MODE_INPUT;
   \       0x18   0x2400             MOVS     R4,#+0
   \       0x1A   0x9406             STR      R4,[SP, #+24]
    116            GPIO_InitStructure.Pull = GPIO_NOPULL;
   \       0x1C   0x9407             STR      R4,[SP, #+28]
    117            GPIO_InitStructure.Pin = PUSH_BUTTON1_PIN;
   \       0x1E   0x2580             MOVS     R5,#+128
   \       0x20   0x01AD             LSLS     R5,R5,#+6        ;; #+8192
   \       0x22   0x9505             STR      R5,[SP, #+20]
    118            HAL_GPIO_Init(PUSH_BUTTON1_GPIO_PORT, &GPIO_InitStructure);
   \       0x24   0x....             LDR      R7,??DataTable5_1  ;; 0x50000800
   \       0x26   0xA905             ADD      R1,SP,#+20
   \       0x28   0x0038             MOVS     R0,R7
   \       0x2A   0x....'....        BL       HAL_GPIO_Init
    119          
    120            if (xButtonIrq == BUTTON_MODE_EXTI)
   \       0x2E   0x2E01             CMP      R6,#+1
   \       0x30   0xD10F             BNE      ??SdkEvalPushButtonIrq_0
    121            {
    122              /* Configures Button EXTI line */
    123              EXTI_InitStructure.Mode = GPIO_MODE_IT_FALLING;
   \       0x32   0x....             LDR      R0,??DataTable5_2  ;; 0x10210000
   \       0x34   0x9001             STR      R0,[SP, #+4]
    124              EXTI_InitStructure.Pull = GPIO_NOPULL;
   \       0x36   0x9402             STR      R4,[SP, #+8]
    125              EXTI_InitStructure.Pin = PUSH_BUTTON1_PIN;
   \       0x38   0x9500             STR      R5,[SP, #+0]
    126              HAL_GPIO_Init(PUSH_BUTTON1_GPIO_PORT, &EXTI_InitStructure);
   \       0x3A   0x4669             MOV      R1,SP
   \       0x3C   0x0038             MOVS     R0,R7
   \       0x3E   0x....'....        BL       HAL_GPIO_Init
    127          
    128              HAL_NVIC_SetPriority(PUSH_BUTTON1_EXTI_IRQn, PUSH_BUTTON1_IRQ_PREEMPTION_PRIORITY, PUSH_BUTTON1_IRQ_SUB_PRIORITY);
   \       0x42   0x2200             MOVS     R2,#+0
   \       0x44   0x2100             MOVS     R1,#+0
   \       0x46   0x2007             MOVS     R0,#+7
   \       0x48   0x....'....        BL       HAL_NVIC_SetPriority
    129              HAL_NVIC_EnableIRQ(PUSH_BUTTON1_EXTI_IRQn);
   \       0x4C   0x2007             MOVS     R0,#+7
   \       0x4E   0x....'....        BL       HAL_NVIC_EnableIRQ
    130            }
    131          }
   \                     ??SdkEvalPushButtonIrq_0: (+1)
   \       0x52   0xB00B             ADD      SP,SP,#+44
   \       0x54   0xBDF0             POP      {R4-R7,PC}       ;; return
    132          

   \                                 In section .text, align 2, keep-with-next
    133          FlagStatus SdkEvalPushButtonGetState(SdkEvalButton xButton)
    134          {
   \                     SdkEvalPushButtonGetState: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    135            GPIO_PinState ret = HAL_GPIO_ReadPin(PUSH_BUTTON1_GPIO_PORT, Get_ButtonGpioPin(BUTTON_1));
   \        0x2   0x2180             MOVS     R1,#+128
   \        0x4   0x0189             LSLS     R1,R1,#+6        ;; #+8192
   \        0x6   0x....             LDR      R0,??DataTable5_1  ;; 0x50000800
   \        0x8   0x....'....        BL       HAL_GPIO_ReadPin
   \        0xC   0xBD02             POP      {R1,PC}          ;; return
    136            return (FlagStatus)ret;
    137          }
    138          

   \                                 In section .text, align 2, keep-with-next
    139          FlagStatus SdkEvalPushButtonGetITPendingBit(SdkEvalButton xButton)
    140          {
    141            if(__HAL_GPIO_EXTI_GET_IT(Get_ButtonGpioPin(xButton)))
   \                     SdkEvalPushButtonGetITPendingBit: (+1)
   \        0x0   0x....             LDR      R0,??DataTable5_3  ;; 0x40010414
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x2180             MOVS     R1,#+128
   \        0x6   0x0189             LSLS     R1,R1,#+6        ;; #+8192
   \        0x8   0x4008             ANDS     R0,R0,R1
   \        0xA   0xD000             BEQ      ??SdkEvalPushButtonGetITPendingBit_0
   \        0xC   0x2001             MOVS     R0,#+1
   \                     ??SdkEvalPushButtonGetITPendingBit_0: (+1)
   \        0xE   0xB2C0             UXTB     R0,R0
    142              return SET;
    143            else
    144              return RESET;
   \       0x10   0x4770             BX       LR               ;; return
    145          }
    146          

   \                                 In section .text, align 2, keep-with-next
    147          void SdkEvalPushButtonClearITPendingBit(SdkEvalButton xButton)
    148          {
    149            __HAL_GPIO_EXTI_CLEAR_IT(Get_ButtonGpioPin(xButton));
   \                     SdkEvalPushButtonClearITPendingBit: (+1)
   \        0x0   0x2080             MOVS     R0,#+128
   \        0x2   0x0180             LSLS     R0,R0,#+6        ;; #+8192
   \        0x4   0x....             LDR      R1,??DataTable5_3  ;; 0x40010414
   \        0x6   0x6008             STR      R0,[R1, #+0]
    150          }
   \        0x8   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x4002'102C        DC32     0x4002102c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \        0x0   0x5000'0800        DC32     0x50000800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \        0x0   0x1021'0000        DC32     0x10210000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \        0x0   0x4001'0414        DC32     0x40010414
    151          
    152          /**
    153          * @}
    154          */
    155          
    156          /**
    157          * @}
    158          */
    159          
    160          /**
    161          * @}
    162          */
    163          
    164          
    165          /******************* (C) COPYRIGHT 2019 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Get_ButtonGpioPin
       0   SdkEvalPushButtonClearITPendingBit
       0   SdkEvalPushButtonGetITPendingBit
       8   SdkEvalPushButtonGetState
         8   -> HAL_GPIO_ReadPin
      24   SdkEvalPushButtonInit
        24   -> HAL_GPIO_Init
      64   SdkEvalPushButtonIrq
        64   -> HAL_GPIO_Init
        64   -> HAL_NVIC_EnableIRQ
        64   -> HAL_NVIC_SetPriority


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       6  Get_ButtonGpioPin
      10  SdkEvalPushButtonClearITPendingBit
      18  SdkEvalPushButtonGetITPendingBit
      14  SdkEvalPushButtonGetState
      46  SdkEvalPushButtonInit
      86  SdkEvalPushButtonIrq

 
 196 bytes in section .text
 
 196 bytes of CODE memory

Errors: none
Warnings: none
