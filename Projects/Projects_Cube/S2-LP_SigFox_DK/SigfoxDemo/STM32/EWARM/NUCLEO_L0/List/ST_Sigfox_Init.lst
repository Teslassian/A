###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.9.278/W32 for ARM         12/Jan/2021  12:25:22
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                    
#    Endian                   =  little
#    Source file              =
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\src\ST_Sigfox_Init.c
#    Command line             =
#        -f C:\Users\dvone\AppData\Local\Temp\EW6758.tmp
#        (C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\src\ST_Sigfox_Init.c
#        -D USE_STM32L0XX_NUCLEO -D USE_HAL_DRIVER -D USE_SYSTICK_DELAY -D
#        STM32L053xx -lC
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\NUCLEO_L0\List
#        -o
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\NUCLEO_L0\Obj
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\Sigfox_Libs\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\ST_API\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\BSP\SDK_Eval_STM32\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\MCU\STM32_HAL\STM32L0xx_HAL_Driver\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\MCU\CMSIS\STM32L0xx\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\S2LP_Middleware\STM32\inc\\
#        -I
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\..\..\..\..\..\Drivers\Utils\STM32\inc\\
#        -Ohz --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.4\arm\CMSIS\Core\Include\\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.4\arm\CMSIS\DSP\Include\\")
#    Locale                   =  C
#    List file                =
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\NUCLEO_L0\List\ST_Sigfox_Init.lst
#    Object file              =
#        C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\STM32\EWARM\NUCLEO_L0\Obj\ST_Sigfox_Init.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#
###############################################################################

C:\Users\dvone\Desktop\Divigraph\SigfoxDemo\Projects\Projects_Cube\S2-LP_SigFox_DK\SigfoxDemo\src\ST_Sigfox_Init.c
      1          #include "ST_Sigfox_Init.h"
      2          #include "SDK_UTILS_Flash.h"
      3          #include "SDK_UTILS_Timers.h"
      4          
      5          

   \                                 In section .text, align 4, keep-with-next
      6          ST_SFX_ERR St_Sigfox_Open_RCZ(uint8_t rcz)
      7          {
   \                     St_Sigfox_Open_RCZ: (+1)
   \        0x0   0xB558             PUSH     {R3,R4,R6,LR}
   \        0x2   0xB08A             SUB      SP,SP,#+40
      8            ST_SFX_ERR open_err = ST_SFX_ERR_NONE;
   \        0x4   0x2400             MOVS     R4,#+0
      9          
     10            switch(rcz)
   \        0x6   0x1E40             SUBS     R0,R0,#+1
   \        0x8   0x2806             CMP      R0,#+6
   \        0xA   0xD900             BLS      .+4
   \        0xC   0xE081             B        ??St_Sigfox_Open_RCZ_1
   \        0xE   0xA102             ADR      R1,??St_Sigfox_Open_RCZ_0
   \       0x10   0x5C09             LDRB     R1,[R1, R0]
   \       0x12   0x0049             LSLS     R1,R1,#+1
   \       0x14   0x448F             ADD      PC,PC,R1
   \       0x16   0xBF00             Nop
   \                     ??St_Sigfox_Open_RCZ_0:
   \       0x18   0x04 0x0A          DC8      0x4,0xA,0x1C,0x32

   \              0x1C 0x32
   \       0x1C   0x4B 0x68          DC8      0x4B,0x68,0x6E,0x0

   \              0x6E 0x00
     11            {
     12              case 1:
     13                {
     14                  /* Turn PA off in RC1/3/5/6/7 */
     15                  ST_RF_API_set_pa(0);
   \                     ??St_Sigfox_Open_RCZ_2: (+1)
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x....'....        BL       ST_RF_API_set_pa
     16                  /* RC1 - open the Sigfox library */
     17                  if(SIGFOX_API_open(&(sfx_rc_t)RC1)!=0)
   \       0x26   0x4668             MOV      R0,SP
   \       0x28   0x....             ADR.N    R1,?_0
   \       0x2A   0xE068             B.N      ??St_Sigfox_Open_RCZ_3
     18                  {
     19                    /* Stuck in case of error */
     20                    open_err = ST_SFX_ERR_OPEN;
     21                  }
     22                  break;
     23                }
     24              case 2:
     25                {
     26                  /* Turn PA off in RC2 and RC4 */
     27                  ST_RF_API_set_pa(1);
   \                     ??St_Sigfox_Open_RCZ_4: (+1)
   \       0x2C   0x2001             MOVS     R0,#+1
   \       0x2E   0x....'....        BL       ST_RF_API_set_pa
     28                  /* RC2 - open the Sigfox library */
     29                  if(SIGFOX_API_open(&(sfx_rc_t)RC2)!=0)
   \       0x32   0x4668             MOV      R0,SP
   \       0x34   0x....             ADR.N    R1,?_1
   \       0x36   0x221C             MOVS     R2,#+28
   \       0x38   0x....'....        BL       __aeabi_memcpy4
   \       0x3C   0x4668             MOV      R0,SP
   \       0x3E   0x....'....        BL       SIGFOX_API_open
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD000             BEQ      ??St_Sigfox_Open_RCZ_5
     30                  {
     31                    /* Stuck in case of error */
     32                    open_err = ST_SFX_ERR_OPEN;
   \       0x46   0x2401             MOVS     R4,#+1
     33                  }
     34          
     35                  /* In FCC we can choose the macro channel to use by a 86 bits bitmask
     36                  In this case we use the first 9 macro channels */
     37                  sfx_u32 config_words[3]=RC2_SM_CONFIG;
   \                     ??St_Sigfox_Open_RCZ_5: (+1)
   \       0x48   0x4668             MOV      R0,SP
   \       0x4A   0xBF00             Nop
   \       0x4C   0x....             ADR.N    R1,?_2
   \       0x4E   0xE044             B.N      ??St_Sigfox_Open_RCZ_6
     38          
     39                  /* Set the standard configuration with default channel to 1 */
     40                  if(SIGFOX_API_set_std_config(config_words,0)!=0)
     41                  {
     42                    /* Stuck in case of error */
     43                    open_err = ST_SFX_ERR_OPEN;
     44                  }
     45                  break;
     46                }
     47              case 3:
     48                {
     49                  volatile uint8_t ret;
     50                  /* Turn PA off in RC1/3/5/6/7 */
     51                  ST_RF_API_set_pa(0);
   \                     ??St_Sigfox_Open_RCZ_7: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0x....'....        BL       ST_RF_API_set_pa
     52                  ret=SIGFOX_API_open(&(sfx_rc_t)RC3C);
   \       0x56   0xA803             ADD      R0,SP,#+12
   \       0x58   0x....             ADR.N    R1,?_3
   \       0x5A   0x221C             MOVS     R2,#+28
   \       0x5C   0x....'....        BL       __aeabi_memcpy4
   \       0x60   0xA803             ADD      R0,SP,#+12
   \       0x62   0x....'....        BL       SIGFOX_API_open
   \       0x66   0x4669             MOV      R1,SP
   \       0x68   0x7008             STRB     R0,[R1, #+0]
     53                  /* RC3 - open the Sigfox library */
     54                  if(ret!=0)
   \       0x6A   0x4668             MOV      R0,SP
   \       0x6C   0x7800             LDRB     R0,[R0, #+0]
   \       0x6E   0x2800             CMP      R0,#+0
   \       0x70   0xD000             BEQ      ??St_Sigfox_Open_RCZ_8
     55                  {
     56                    /* Stuck in case of error */
     57                    open_err = ST_SFX_ERR_OPEN;
   \       0x72   0x2401             MOVS     R4,#+1
     58                  }
     59          
     60                  /* In FCC we can choose the macro channel to use by a 86 bits bitmask
     61                  In this case we use 9 consecutive macro channels starting from 63 (920.8MHz) */
     62                  sfx_u32 config_words[3]=RC3C_CONFIG;
   \                     ??St_Sigfox_Open_RCZ_8: (+1)
   \       0x74   0x4668             MOV      R0,SP
   \       0x76   0xBF00             Nop
   \       0x78   0x....             ADR.N    R1,?_4
   \       0x7A   0xE02E             B.N      ??St_Sigfox_Open_RCZ_6
     63          
     64                  /* Set the standard configuration with default channel to 63 */
     65                  if(SIGFOX_API_set_std_config(config_words,0)!=0)
     66                  {
     67                    /* Stuck in case of error */
     68                    open_err = ST_SFX_ERR_OPEN;
     69                  }
     70                  break;
     71                }
     72              case 4:
     73                {
     74                  volatile uint8_t ret;
     75                  /* Turn PA off in RC2 and RC4 */
     76                  ST_RF_API_set_pa(1);
   \                     ??St_Sigfox_Open_RCZ_9: (+1)
   \       0x7C   0x2001             MOVS     R0,#+1
   \       0x7E   0x....'....        BL       ST_RF_API_set_pa
     77          
     78                  ret=SIGFOX_API_open(&(sfx_rc_t)RC4);
   \       0x82   0xA803             ADD      R0,SP,#+12
   \       0x84   0x....             ADR.N    R1,?_5
   \       0x86   0x221C             MOVS     R2,#+28
   \       0x88   0x....'....        BL       __aeabi_memcpy4
   \       0x8C   0xA803             ADD      R0,SP,#+12
   \       0x8E   0x....'....        BL       SIGFOX_API_open
   \       0x92   0x4669             MOV      R1,SP
   \       0x94   0x7008             STRB     R0,[R1, #+0]
     79                  /* RC4 - open the Sigfox library */
     80                  if(ret!=0)
   \       0x96   0x4668             MOV      R0,SP
   \       0x98   0x7800             LDRB     R0,[R0, #+0]
   \       0x9A   0x2800             CMP      R0,#+0
   \       0x9C   0xD000             BEQ      ??St_Sigfox_Open_RCZ_10
     81                  {
     82                    /* Stuck in case of error */
     83                    open_err = ST_SFX_ERR_OPEN;
   \       0x9E   0x2401             MOVS     R4,#+1
     84                  }
     85          
     86                  /* In FCC we can choose the macro channel to use by a 86 bits bitmask
     87                  In this case we use 9 consecutive macro channels starting from 63 (920.8MHz) */
     88                  sfx_u32 config_words[3]=RC4_SM_CONFIG;
   \                     ??St_Sigfox_Open_RCZ_10: (+1)
   \       0xA0   0x4668             MOV      R0,SP
   \       0xA2   0xBF00             Nop
   \       0xA4   0x....             ADR.N    R1,?_6
   \       0xA6   0xC94C             LDM      R1!,{R2,R3,R6}
   \       0xA8   0xC04C             STM      R0!,{R2,R3,R6}
     89          
     90                  /* Set the standard configuration with default channel to 63 */
     91                  if(SIGFOX_API_set_std_config(config_words,1)!=0)
   \       0xAA   0x2101             MOVS     R1,#+1
   \       0xAC   0xE018             B.N      ??St_Sigfox_Open_RCZ_11
     92                  {
     93                    /* Stuck in case of error */
     94                    open_err = ST_SFX_ERR_OPEN;
     95                  }
     96                  break;
     97                }
     98              case 5:
     99                {
    100                  volatile uint8_t ret;
    101                  /* Turn PA off in RC1/3/5/6/7 */
    102                  ST_RF_API_set_pa(0);
   \                     ??St_Sigfox_Open_RCZ_12: (+1)
   \       0xAE   0x2000             MOVS     R0,#+0
   \       0xB0   0x....'....        BL       ST_RF_API_set_pa
    103                  ret=SIGFOX_API_open(&(sfx_rc_t)RC5);
   \       0xB4   0xA803             ADD      R0,SP,#+12
   \       0xB6   0xBF00             Nop
   \       0xB8   0x....             ADR.N    R1,?_7
   \       0xBA   0x221C             MOVS     R2,#+28
   \       0xBC   0x....'....        BL       __aeabi_memcpy4
   \       0xC0   0xA803             ADD      R0,SP,#+12
   \       0xC2   0x....'....        BL       SIGFOX_API_open
   \       0xC6   0x4669             MOV      R1,SP
   \       0xC8   0x7008             STRB     R0,[R1, #+0]
    104                  /* RC5 - open the Sigfox library */
    105                  if(ret!=0)
   \       0xCA   0x4668             MOV      R0,SP
   \       0xCC   0x7800             LDRB     R0,[R0, #+0]
   \       0xCE   0x2800             CMP      R0,#+0
   \       0xD0   0xD000             BEQ      ??St_Sigfox_Open_RCZ_13
    106                  {
    107                    /* Stuck in case of error */
    108                    open_err = ST_SFX_ERR_OPEN;
   \       0xD2   0x2401             MOVS     R4,#+1
    109                  }
    110          
    111                  /* In FCC we can choose the macro channel to use by a 86 bits bitmask
    112                  In this case we use 9 consecutive macro channels starting from 63 (920.8MHz) */
    113                  sfx_u32 config_words[3]=RC5_CONFIG;
   \                     ??St_Sigfox_Open_RCZ_13: (+1)
   \       0xD4   0x4668             MOV      R0,SP
   \       0xD6   0xBF00             Nop
   \       0xD8   0x....             ADR.N    R1,?_8
   \                     ??St_Sigfox_Open_RCZ_6: (+1)
   \       0xDA   0xC94C             LDM      R1!,{R2,R3,R6}
   \       0xDC   0xC04C             STM      R0!,{R2,R3,R6}
    114          
    115                  /* Set the standard configuration with default channel to 63 */
    116                  if(SIGFOX_API_set_std_config(config_words,0)!=0)
   \       0xDE   0x2100             MOVS     R1,#+0
   \                     ??St_Sigfox_Open_RCZ_11: (+1)
   \       0xE0   0x4668             MOV      R0,SP
   \       0xE2   0x....'....        BL       SIGFOX_API_set_std_config
   \       0xE6   0xE010             B.N      ??St_Sigfox_Open_RCZ_14
    117                  {
    118                    /* Stuck in case of error */
    119                    open_err = ST_SFX_ERR_OPEN;
    120                  }
    121                  break;
    122                }
    123              case 6:
    124                {
    125                  /* Turn PA off in RC1/3/5/6/7 */
    126                  ST_RF_API_set_pa(0);
   \                     ??St_Sigfox_Open_RCZ_15: (+1)
   \       0xE8   0x2000             MOVS     R0,#+0
   \       0xEA   0x....'....        BL       ST_RF_API_set_pa
    127                  /* RC6 - open the Sigfox library */
    128                  if(SIGFOX_API_open(&(sfx_rc_t)RC6)!=0)
   \       0xEE   0x4668             MOV      R0,SP
   \       0xF0   0x....             ADR.N    R1,?_9
   \       0xF2   0xE004             B.N      ??St_Sigfox_Open_RCZ_3
    129                  {
    130                    /* Stuck in case of error */
    131                    open_err = ST_SFX_ERR_OPEN;
    132                  }
    133                  break;
    134                }
    135              case 7:
    136                {
    137                  /* Turn PA off in RC1/3/5/6/7 */
    138                  ST_RF_API_set_pa(0);
   \                     ??St_Sigfox_Open_RCZ_16: (+1)
   \       0xF4   0x2000             MOVS     R0,#+0
   \       0xF6   0x....'....        BL       ST_RF_API_set_pa
    139                  /* RC7 - open the Sigfox library */
    140                  if(SIGFOX_API_open(&(sfx_rc_t)RC7)!=0)
   \       0xFA   0x4668             MOV      R0,SP
   \       0xFC   0x....             ADR.N    R1,?_10
   \                     ??St_Sigfox_Open_RCZ_3: (+1)
   \       0xFE   0x221C             MOVS     R2,#+28
   \      0x100   0x....'....        BL       __aeabi_memcpy4
   \      0x104   0x4668             MOV      R0,SP
   \      0x106   0x....'....        BL       SIGFOX_API_open
   \                     ??St_Sigfox_Open_RCZ_14: (+1)
   \      0x10A   0x2800             CMP      R0,#+0
   \      0x10C   0xD002             BEQ      ??St_Sigfox_Open_RCZ_17
    141                  {
    142                    /* Stuck in case of error */
    143                    open_err = ST_SFX_ERR_OPEN;
   \      0x10E   0x2401             MOVS     R4,#+1
   \      0x110   0xE000             B        ??St_Sigfox_Open_RCZ_17
    144                  }
    145                  break;
    146                }
    147              default:
    148                {
    149                  /* Stuck the application for a out of range number */
    150                  open_err = ST_SFX_ERR_RC_UNKNOWN;
   \                     ??St_Sigfox_Open_RCZ_1: (+1)
   \      0x112   0x2463             MOVS     R4,#+99
    151                  break;
    152                }
    153              }
    154            return open_err;
   \                     ??St_Sigfox_Open_RCZ_17: (+1)
   \      0x114   0x0020             MOVS     R0,R4
   \      0x116   0xB00B             ADD      SP,SP,#+44
   \      0x118   0xBD50             POP      {R4,R6,PC}       ;; return
    155          }
    156          

   \                                 In section .text, align 4, keep-with-next
    157          ST_SFX_ERR ST_Sigfox_Init(NVM_BoardDataType *sfxConfig, uint8_t openAfterInit)
    158          {
   \                     ST_Sigfox_Init: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x0005             MOVS     R5,R0
   \        0x4   0x000E             MOVS     R6,R1
    159            ST_SFX_ERR ret_err = ST_SFX_ERR_NONE;
   \        0x6   0x2400             MOVS     R4,#+0
    160          
    161            /* Configure XTAL frequency and offset for the RF Library */
    162            ST_RF_API_set_xtal_freq(S2LPManagementGetXtalFrequency());
   \        0x8   0x....'....        BL       S2LPManagementGetXtalFrequency
   \        0xC   0x....'....        BL       ST_RF_API_set_xtal_freq
    163          
    164            /* Macro that defines and initializes the nvmconfig structure */
    165            INIT_NVM_CONFIG(nvmConfig);
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0xBF00             Nop
   \       0x14   0x....             ADR.N    R1,?_11
   \       0x16   0x2210             MOVS     R2,#+16
   \       0x18   0x....'....        BL       __aeabi_memcpy4
    166          
    167            /* Sigfox Credentials Management */
    168          #ifdef USE_FLASH
    169            nvmConfig.nvmType = NVM_TYPE_FLASH;
    170            nvmConfig.sfxDataAddress = (uint32_t)FLASH_USER_START_ADDR;	/* Set here the address for 'NVM sigfox data' management */
    171            nvmConfig.boardDataAddress = (uint32_t)FLASH_BOARD_START_ADDR;	/* Set here the address for 'NVM board data' management */
    172          #endif
    173          
    174            /* Configure the NVM_API */
    175            SetNVMInitial(&nvmConfig);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       SetNVMInitial
    176          
    177          #ifdef USE_FLASH
    178            /* Retrieve Sigfox info from FLASH */
    179            if(enc_utils_retrieve_data_from_flash(sfxConfig, UID_ADDRESS, UID_LEN) != 0)
    180            	ret_err = ST_SFX_ERR_CREDENTIALS;
    181          
    182            if(!ret_err)
    183            {
    184              ret_err = (ST_SFX_ERR)ST_RF_API_set_xtal_freq(S2LPManagementGetXtalFrequency()+sfxConfig->freqOffset);  /* Override RF_API Xtal value */
    185          
    186              if(!ret_err)
    187                ret_err = (ST_SFX_ERR)ST_RF_API_set_rssi_offset(sfxConfig->rssiOffset); /* Override RSSI offset */
    188          
    189              if(!ret_err)
    190              	ret_err = (ST_SFX_ERR)ST_RF_API_set_lbt_thr_offset(sfxConfig->lbtOffset); /* Override LBT threshold offset */
    191          
    192              if(ret_err) /* An error occured reading freq, RSSI or LBT offsets */
    193          	ret_err = ST_SFX_ERR_OFFSET;
    194            }
    195          #else
    196            /* Retrieve Sigfox info from EEPROM */
    197            if(enc_utils_retrieve_data(&sfxConfig->id, sfxConfig->pac, &sfxConfig->rcz) != 0)
   \       0x22   0x1D2A             ADDS     R2,R5,#+4
   \       0x24   0x1D69             ADDS     R1,R5,#+5
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0x....'....        BL       enc_utils_retrieve_data
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD001             BEQ      ??ST_Sigfox_Init_0
    198            	ret_err = ST_SFX_ERR_CREDENTIALS;
   \       0x30   0x2402             MOVS     R4,#+2
   \       0x32   0xE008             B        ??ST_Sigfox_Init_1
    199            else
    200              sfxConfig->freqOffset = S2LPManagementGetXtalFrequency();
   \                     ??ST_Sigfox_Init_0: (+1)
   \       0x34   0x....'....        BL       S2LPManagementGetXtalFrequency
   \       0x38   0x6128             STR      R0,[R5, #+16]
    201          #endif
    202          
    203            /* If the retriever returns an error (code different from ST_SFX_ERR_NONE) the application will halt */
    204            /* Otherwise, open the Sigfox Library according to the zone stored in the device */
    205            if(openAfterInit && ret_err == ST_SFX_ERR_NONE)
   \       0x3A   0x2E00             CMP      R6,#+0
   \       0x3C   0xD003             BEQ      ??ST_Sigfox_Init_1
    206              ret_err = St_Sigfox_Open_RCZ(sfxConfig->rcz);
   \       0x3E   0x7928             LDRB     R0,[R5, #+4]
   \       0x40   0x....'....        BL       St_Sigfox_Open_RCZ
   \       0x44   0x0004             MOVS     R4,R0
    207          
    208            return ret_err;
   \                     ??ST_Sigfox_Init_1: (+1)
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0xB004             ADD      SP,SP,#+16
   \       0x4A   0xBD70             POP      {R4-R6,PC}       ;; return
    209          }

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \        0x0   0x00               DC8 0
   \        0x1                      DS8 3
   \        0x4   0x0000'0000        DC32 0, 1'536

   \              0x0000'0600
   \        0xC   0x00               DC8 0
   \        0xD                      DS8 3
    210          

   \                                 In section .text, align 2, keep-with-next
    211          void ST_Sigfox_SetPublicKey(uint8_t en)
    212          {
   \                     ST_Sigfox_SetPublicKey: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    213            enc_utils_set_public_key(en);
   \        0x2   0x....'....        BL       enc_utils_set_public_key
    214          }
   \        0x6   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \        0x0   0x33BE'9CD0        DC32 868'130'000, 869'525'000, 192'000

   \              0x33D3'E608  

   \              0x0002'EE00
   \        0xC   0x01 0x04          DC8 1, 4
   \        0xE                      DS8 2
   \       0x10   0x0000'0000        DC32 0, 0

   \              0x0000'0000
   \       0x18   0x00               DC8 0
   \       0x19                      DS8 3

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \        0x0   0x35C6'7AC0        DC32 902'200'000, 905'200'000, 192'000

   \              0x35F4'4180  

   \              0x0002'EE00
   \        0xC   0x02 0x01          DC8 2, 1
   \        0xE                      DS8 2
   \       0x10   0x0000'0000        DC32 0, 0

   \              0x0000'0000
   \       0x18   0x00               DC8 0
   \       0x19                      DS8 3

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \        0x0   0x0000'0001        DC32 1, 0, 0

   \              0x0000'0000  

   \              0x0000'0000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \        0x0   0x3706'EA00        DC32 923'200'000, 922'200'000, 192'000

   \              0x36F7'A7C0  

   \              0x0002'EE00
   \        0xC   0x01 0x02          DC8 1, 2
   \        0xE                      DS8 2
   \       0x10   0x3706'EA00        DC32 923'200'000, 200'000

   \              0x0003'0D40
   \       0x18   0xB0               DC8 -80
   \       0x19                      DS8 3

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \        0x0   0x0000'0003        DC32 3, 5'000, 0

   \              0x0000'1388  

   \              0x0000'0000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \        0x0   0x35C6'7AC0        DC32 902'200'000, 922'300'000, 192'000

   \              0x36F9'2E60  

   \              0x0002'EE00
   \        0xC   0x02 0x01          DC8 2, 1
   \        0xE                      DS8 2
   \       0x10   0x0000'0000        DC32 0, 0

   \              0x0000'0000
   \       0x18   0x00               DC8 0
   \       0x19                      DS8 3

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \        0x0   0x0000'0000        DC32 0, 1'073'741'824, 0

   \              0x4000'0000  

   \              0x0000'0000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \        0x0   0x3708'70A0        DC32 923'300'000, 922'300'000, 192'000

   \              0x36F9'2E60  

   \              0x0002'EE00
   \        0xC   0x01 0x02          DC8 1, 2
   \        0xE                      DS8 2
   \       0x10   0x3708'70A0        DC32 923'300'000, 200'000

   \              0x0003'0D40
   \       0x18   0xBF               DC8 -65
   \       0x19                      DS8 3

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \        0x0   0x0000'0003        DC32 3, 5'000, 0

   \              0x0000'1388  

   \              0x0000'0000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \        0x0   0x3391'E780        DC32 865'200'000, 866'300'000, 192'000

   \              0x33A2'B060  

   \              0x0002'EE00
   \        0xC   0x01 0x04          DC8 1, 4
   \        0xE                      DS8 2
   \       0x10   0x0000'0000        DC32 0, 0

   \              0x0000'0000
   \       0x18   0x00               DC8 0
   \       0x19                      DS8 3

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \        0x0   0x33C8'D600        DC32 868'800'000, 869'100'000, 192'000

   \              0x33CD'69E0  

   \              0x0002'EE00
   \        0xC   0x01 0x04          DC8 1, 4
   \        0xE                      DS8 2
   \       0x10   0x0000'0000        DC32 0, 0

   \              0x0000'0000
   \       0x18   0x00               DC8 0
   \       0x19                      DS8 3

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   ST_Sigfox_Init
        32   -> S2LPManagementGetXtalFrequency
        32   -> ST_RF_API_set_xtal_freq
        32   -> SetNVMInitial
        32   -> St_Sigfox_Open_RCZ
        32   -> __aeabi_memcpy4
        32   -> enc_utils_retrieve_data
       8   ST_Sigfox_SetPublicKey
         8   -> enc_utils_set_public_key
      56   St_Sigfox_Open_RCZ
        56   -> SIGFOX_API_open
        56   -> SIGFOX_API_set_std_config
        56   -> ST_RF_API_set_pa
        56   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      28  ?_0
      28  ?_1
      28  ?_10
      16  ?_11
      12  ?_2
      28  ?_3
      12  ?_4
      28  ?_5
      12  ?_6
      28  ?_7
      12  ?_8
      28  ?_9
      76  ST_Sigfox_Init
       8  ST_Sigfox_SetPublicKey
     282  St_Sigfox_Open_RCZ

 
 626 bytes in section .text
 
 626 bytes of CODE memory

Errors: none
Warnings: none
